{"ast":null,"code":"var _jsxFileName = \"G:\\\\Javascript\\\\my-app-react\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = props => {\n  let addNameUser = React.createRef();\n\n  let addNewUser = () => {\n    let text = addNameUser.current.value;\n    props.addUser(text);\n  };\n\n  return React.createElement(\"div\", {\n    className: `${s.dialogs} ${s.grid}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.dialogsItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.data.map(el => {\n    return React.createElement(DialogItem, {\n      name: el.name,\n      id: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: s.massages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.message.map(el => {\n    return React.createElement(Message, {\n      message: el.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  })), React.createElement(\"textarea\", {\n    ref: addNameUser,\n    value: \"Lena\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addNewUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435>\"));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["G:/Javascript/my-app-react/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Dialogs","props","addNameUser","createRef","addNewUser","text","current","value","addUser","dialogs","grid","dialogsItem","data","map","el","name","id","massages","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,WAAW,GAAGN,KAAK,CAACO,SAAN,EAAlB;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAA/B;AACDN,IAAAA,KAAK,CAACO,OAAN,CAAcH,IAAd;AACK,GAHR;;AAKA,SACI;AAAK,IAAA,SAAS,EAAG,GAAER,CAAC,CAACY,OAAQ,IAAGZ,CAAC,CAACa,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEb,CAAC,CAACc,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAeC,EAAE,IAAI;AAAC,WAAO,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,EAAE,CAACC,IAArB;AAA2B,MAAA,EAAE,EAAED,EAAE,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACtB,GADA,CADL,CADJ,EAKI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACoB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,KAAK,CAACiB,OAAN,CAAcL,GAAd,CAAkBC,EAAE,IAAI;AAAE,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,EAAE,CAACI,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAuC,GAAjE,CADL,CALJ,EAQI;AAAU,IAAA,GAAG,EAAEhB,WAAf;AAA4B,IAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI;AAAQ,IAAA,OAAO,EAAGE,UAAU,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+IATJ,CADJ;AAaH,CAtBD;;AAyBA,eAAeJ,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addNameUser = React.createRef();\r\n\r\n    let addNewUser = () => {\r\n        let text = addNameUser.current.value;\r\n       props.addUser(text);\r\n           };\r\n\r\n    return (\r\n        <div className={`${s.dialogs} ${s.grid}`}>\r\n            <div className={s.dialogsItem}>\r\n                {props.data.map(el => {return <DialogItem name={el.name} id={el.id}/>\r\n                })}\r\n            </div>\r\n            <div className={s.massages}>\r\n                {props.message.map(el => { return <Message message={el.message}/>})}\r\n            </div>\r\n            <textarea ref={addNameUser} value='Lena'></textarea>\r\n            <button onClick={ addNewUser() }>Добавить новое сообщение></button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}